# Generated by Django 4.1.3 on 2023-03-26 02:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import shared.models.user_manager


class Migration(migrations.Migration):

    replaces = [('shared', '0001_initial'), ('shared', '0002_alter_membership_included_products'), ('shared', '0003_registration'), ('shared', '0004_alter_registration_is_merchant_and_more'), ('shared', '0005_alter_registration_membership'), ('shared', '0006_producttype_user_selection_required'), ('shared', '0007_registrationproduct'), ('shared', '0008_alter_registrationproduct_attribute'), ('shared', '0009_alter_registrationproduct_attribute'), ('shared', '0010_rename_is_part_host_registration_is_party_host')]

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', shared.models.user_manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_short', models.CharField(max_length=50, verbose_name='Short Name')),
                ('name_long', models.CharField(max_length=150, verbose_name='Long Name')),
                ('event_start_date', models.DateField(verbose_name='Event Start')),
                ('event_end_date', models.DateField(verbose_name='Event End')),
                ('event_tier1_pricing_start', models.DateField(verbose_name='Tier 1 Pricing Start')),
                ('event_tier2_pricing_start', models.DateField(verbose_name='Tier 2 Pricing Start')),
                ('event_tier3_pricing_start', models.DateField(verbose_name='Tier 3 Pricing Start')),
                ('partyfloor_rooms_available', models.IntegerField(default=0, verbose_name='Part Floor Available')),
                ('merchants_spots_available', models.IntegerField(default=0, verbose_name='Merchant Spots Available')),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_short', models.CharField(max_length=50, verbose_name='Short Name')),
                ('name_long', models.CharField(max_length=150, verbose_name='Long Name')),
                ('user_selection_required', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line1', models.CharField(max_length=100, verbose_name='Address')),
                ('address_line2', models.CharField(blank=True, max_length=100, verbose_name='Address Line 2')),
                ('address_city', models.CharField(max_length=100, verbose_name='City')),
                ('address_province', models.CharField(max_length=100, verbose_name='State/Province')),
                ('address_country', models.CharField(max_length=100, verbose_name='Country')),
                ('address_postal_code', models.CharField(max_length=15, verbose_name='Postal Code')),
                ('phone_number', models.CharField(max_length=50, verbose_name='Phone Number')),
                ('emergency_contact_name', models.CharField(max_length=100, verbose_name='Emergency Contact')),
                ('emergency_contact_phone', models.CharField(max_length=50, verbose_name='Emergency Contact Phone')),
                ('birthdate', models.DateField()),
                ('badge_name', models.CharField(max_length=50, verbose_name='Badge Name')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductTypeAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_short', models.CharField(max_length=50, verbose_name='Short Name')),
                ('name_long', models.CharField(max_length=150, verbose_name='Long Name')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.producttype')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_short', models.CharField(max_length=50, verbose_name='Short Name')),
                ('name_long', models.CharField(max_length=150, verbose_name='Long Name')),
                ('product_description', models.TextField(max_length=200, verbose_name='Product Description')),
                ('cart_max', models.IntegerField(help_text='Max allowed in a cart', verbose_name='Cart Max')),
                ('tier1_pricing', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Tier 1 Pricing')),
                ('tier2_pricing', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Tier 2 Priciing')),
                ('tier3_pricing', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Tier 3 Pricing')),
                ('customer_modifiable', models.BooleanField(default=False, verbose_name='Customer Modifiable')),
                ('available_at_event', models.BooleanField(default=False, verbose_name='At Event Availability')),
                ('available_pre_event', models.BooleanField(default=False, verbose_name='Pre Event Availability')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.event')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.producttype', verbose_name='Product Type')),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_short', models.CharField(max_length=50, verbose_name='Short Name')),
                ('name_long', models.CharField(max_length=150, verbose_name='Long Name')),
                ('product_description', models.TextField(max_length=200, verbose_name='Product Description')),
                ('tier1_pricing', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Tier 1 Pricing')),
                ('tier2_pricing', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Tier 2 Priciing')),
                ('tier3_pricing', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Tier 3 Pricing')),
                ('available_at_event', models.BooleanField(default=False, verbose_name='At Event Availability')),
                ('available_pre_event', models.BooleanField(default=False, verbose_name='Pre Event Availability')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.event')),
                ('included_products', models.ManyToManyField(blank=True, to='shared.product')),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Value')),
                ('attribute', models.TextField(default='', verbose_name='Attribute Value')),
                ('membership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.membership')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.product')),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_parent', models.BooleanField(default=False, verbose_name='I am bringing child')),
                ('is_merchant', models.BooleanField(default=False, verbose_name='I am planning to be a Merchant')),
                ('is_party_host', models.BooleanField(default=False, verbose_name='I am planning to host a party')),
                ('is_volunteer', models.BooleanField(default=False, verbose_name='I want to volunteer')),
                ('is_paid', models.BooleanField(default=False, verbose_name='Registration is paid')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shared.event')),
                ('membership', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shared.membership')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
